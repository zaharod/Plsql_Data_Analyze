--02. 기온 데이터 테이블 생성 및 데이터 입력
CREATE TABLE TB_TEMPER_DATA
(
  STD_DE CHAR(10)
, AREA_CD CHAR(3)
, AVG_TEMPER NUMBER(3, 1)
, MIN_TEMPER NUMBER(3, 1)
, MAX_TEMPER NUMBER(3, 1)
);


SELECT COUNT(*) FROM TB_TEMPER_DATA; 


CREATE TABLE TB_TEMPER
(
  STD_DE CHAR(8)
, AREA_CD CHAR(3)
, AVG_TEMPER NUMBER(3, 1)
, MIN_TEMPER NUMBER(3, 1)
, MAX_TEMPER NUMBER(3, 1)
, CONSTRAINT TB_TEMPER_PK PRIMARY KEY (STD_DE, AREA_CD)
);

INSERT INTO TB_TEMPER
SELECT
   REPLACE(STD_DE, '-', '') AS STD_DE
 , AREA_CD
 , AVG_TEMPER
 , MIN_TEMPER
 , MAX_TEMPER
  FROM TB_TEMPER_DATA;

COMMIT; 

--03. 서울시의 최고/최저 온도 및 해당 일자 구하기

--서울시의 역사상 최저 및 최고 온도를 구한다.
SELECT
       A.AREA_CD
     , MIN(A.MIN_TEMPER) AS MIN_TEMPER
     , MAX(A.MAX_TEMPER) AS MAX_TEMPER
  FROM TB_TEMPER A
 WHERE A.AREA_CD = '108' --지역코드 : 서울특별시
 GROUP BY A.AREA_CD 
; 


--서울시의 역사상 최저 및 최고 온도를 구하고 해당 일자를 구한다.
SELECT
   B.AREA_CD
 , B.STD_DE
 , B.MIN_TEMPER
 , B.MAX_TEMPER
  FROM 
     ( 
       SELECT
              A.AREA_CD
            , MIN(A.MIN_TEMPER) AS MIN_TEMPER
            , MAX(A.MAX_TEMPER) AS MAX_TEMPER
         FROM TB_TEMPER A
        WHERE A.AREA_CD = '108' --지역코드 : 서울특별시
        GROUP BY A.AREA_CD
     ) A 
     , TB_TEMPER B 
 WHERE (B.AREA_CD = A.AREA_CD  AND B.MIN_TEMPER  = A.MIN_TEMPER) 
    OR (B.AREA_CD = A.AREA_CD  AND B.MAX_TEMPER  = A.MAX_TEMPER); 

--04. 내 생일 기준 최고/최저 온도 및 연도 구하기

--내 생일(MMDD)를 기준으로 역사상 서울시의 최고 기온과 최저 기온 및 이에 해당하는 일자를 구한다.
SELECT
       B.AREA_CD
     , B.STD_DE
     , B.MIN_TEMPER
     , B.MAX_TEMPER
  FROM 
     (
       SELECT SUBSTR(A.STD_DE, 5, 4) AS MMDD 
            , MIN(A.MIN_TEMPER) AS MIN_TEMPER 
            , MAX(A.MAX_TEMPER) AS MAX_TEMPER 
         FROM TB_TEMPER A 
        WHERE A.AREA_CD = '108' --지역코드 : 서울특별시 
          AND A.STD_DE LIKE '____0612'
        GROUP BY SUBSTR(A.STD_DE, 5, 4)
     ) A 
     , TB_TEMPER B 
WHERE (SUBSTR(B.STD_DE, 5, 4) = A.MMDD AND B.MIN_TEMPER = A.MIN_TEMPER) 
   OR (SUBSTR(B.STD_DE, 5, 4) = A.MMDD AND B.MAX_TEMPER = A.MAX_TEMPER);


--05. 1년중 평균 일교차가 가장 큰달 구하기
SELECT A.MM
     , A.DAILY_CROSS
FROM 
(
   SELECT
          SUBSTR(A.STD_DE, 5, 2) AS MM
        , ROUND(AVG(MAX_TEMPER-MIN_TEMPER), 2) AS DAILY_CROSS
     FROM TB_TEMPER A
    WHERE A.AREA_CD = '108' --지역코드 : 서울특별시
    GROUP BY SUBSTR(A.STD_DE, 5, 2)
    ORDER BY DAILY_CROSS DESC
) A
WHERE ROWNUM <= 1;

--06. 역사상 일교차가 가장 큰 일자 구하기

--역사상 서울시를 기준으로 일교차가 가장 큰 날과 해당 일의 일교차 값, 최저온도, 최고 온도를 구한다. 
SELECT A.STD_DE 
     , A.DAILY_CROSS 
     , A.MAX_TEMPER 
     , A.MIN_TEMPER
  FROM 
     (
       SELECT A.STD_DE 
        , A.MAX_TEMPER-A.MIN_TEMPER AS DAILY_CROSS
        , A.MAX_TEMPER
        , A.MIN_TEMPER
     FROM TB_TEMPER A 
    WHERE A.AREA_CD = '108' --지역코드 : 서울특별시
      AND MAX_TEMPER IS NOT NULL 
      AND MIN_TEMPER IS NOT NULL
    ORDER BY DAILY_CROSS DESC
    ) A
WHERE ROWNUM <= 1; 


--07. 연도별 평균기온의 상승을 확인하기
SELECT SUBSTR(A.STD_DE, 1, 4) AS YYYY
     , ROUND(AVG(AVG_TEMPER), 2) AS AVG_TEMPER
  FROM TB_TEMPER A  
 WHERE A.AREA_CD = '108' --지역코드 : 서울특별시
 GROUP BY SUBSTR(A.STD_DE, 1, 4)
 ORDER BY SUBSTR(A.STD_DE, 1, 4) 
;


SELECT 
       CASE  
       WHEN YYYY BETWEEN '1900' AND '1909' THEN '1900년대' WHEN YYYY BETWEEN '1910' AND '1919' THEN '1910년대'
       WHEN YYYY BETWEEN '1920' AND '1929' THEN '1920년대' WHEN YYYY BETWEEN '1930' AND '1939' THEN '1930년대'
       WHEN YYYY BETWEEN '1940' AND '1949' THEN '1940년대' WHEN YYYY BETWEEN '1950' AND '1959' THEN '1950년대'
       WHEN YYYY BETWEEN '1960' AND '1969' THEN '1960년대' WHEN YYYY BETWEEN '1970' AND '1979' THEN '1970년대'
       WHEN YYYY BETWEEN '1980' AND '1989' THEN '1980년대' WHEN YYYY BETWEEN '1990' AND '1999' THEN '1990년대'
       WHEN YYYY BETWEEN '2000' AND '2009' THEN '2000년대' WHEN YYYY BETWEEN '2010' AND '2019' THEN '2010년대'
       WHEN YYYY BETWEEN '2020' AND '2029' THEN '2020년대' END AS "연대"
     , ROUND(AVG(AVG_TEMPER), 2) AS "평균기온"
  FROM 
     (
       SELECT SUBSTR(A.STD_DE, 1, 4) AS YYYY
            , ROUND(AVG(AVG_TEMPER), 2) AS AVG_TEMPER
         FROM TB_TEMPER A      
        GROUP BY SUBSTR(A.STD_DE, 1, 4)
        ORDER BY SUBSTR(A.STD_DE, 1, 4) 
     ) 
  GROUP BY CASE  
           WHEN YYYY BETWEEN '1900' AND '1909' THEN '1900년대' WHEN YYYY BETWEEN '1910' AND '1919' THEN '1910년대'
           WHEN YYYY BETWEEN '1920' AND '1929' THEN '1920년대' WHEN YYYY BETWEEN '1930' AND '1939' THEN '1930년대'
           WHEN YYYY BETWEEN '1940' AND '1949' THEN '1940년대' WHEN YYYY BETWEEN '1950' AND '1959' THEN '1950년대'
           WHEN YYYY BETWEEN '1960' AND '1969' THEN '1960년대' WHEN YYYY BETWEEN '1970' AND '1979' THEN '1970년대'
           WHEN YYYY BETWEEN '1980' AND '1989' THEN '1980년대' WHEN YYYY BETWEEN '1990' AND '1999' THEN '1990년대'
           WHEN YYYY BETWEEN '2000' AND '2009' THEN '2000년대' WHEN YYYY BETWEEN '2010' AND '2019' THEN '2010년대'
           WHEN YYYY BETWEEN '2020' AND '2029' THEN '2020년대' END
ORDER BY "연대"
;
